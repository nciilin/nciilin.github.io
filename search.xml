<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>JS里的数据类型转换</title>
      <link href="/2019/07/05/%E9%87%8C%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
      <url>/2019/07/05/%E9%87%8C%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="任意类型转字符串"><a href="#任意类型转字符串" class="headerlink" title="任意类型转字符串"></a>任意类型转字符串</h2><p><a href="https://static.xiedaimala.com/FrpnWPAjH4_Zh1Ru58nEIC0I4onn" target="_blank" rel="noopener">图片</a><br><a href="https://static.xiedaimala.com/FnbB3yikB790jzpavhE6eyqioUPP" target="_blank" rel="noopener">图片</a><br><a href="https://static.xiedaimala.com/FgaPxjEAu8-hzeBRnQ7jdHlZiw85" target="_blank" rel="noopener">图片</a></p><h2 id="任意类型转为number"><a href="#任意类型转为number" class="headerlink" title="任意类型转为number"></a>任意类型转为number</h2><blockquote><p>‘1’ -&gt; 1<br>1、<code>Number(&#39;1&#39;) === 1</code><br>2、<code>parseInt(&#39;1&#39;, 10) === 1</code><br>3、<code>parseFloat(&#39;1.23&#39;) === 1.23</code><br>4、<code>&#39;1&#39; + 0 === 1</code></p></blockquote><h2 id="任意类型转boolean"><a href="#任意类型转boolean" class="headerlink" title="任意类型转boolean"></a>任意类型转boolean</h2><p>1、<code>Boolean(x)</code><br>2、<code>!!x</code><br><a href="">图片</a></p><h2 id="数据类型的false值"><a href="#数据类型的false值" class="headerlink" title="数据类型的false值"></a>数据类型的false值</h2><blockquote><p><code>0</code>、<code>NaN</code>、<code>false</code>、<code></code>、<code>undefined</code></p></blockquote>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>JS里的数据类型</title>
      <link href="/2019/07/05/JS%E9%87%8C%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2019/07/05/JS%E9%87%8C%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="JavaScript的七种数据类型"><a href="#JavaScript的七种数据类型" class="headerlink" title="JavaScript的七种数据类型"></a>JavaScript的七种数据类型</h2><h3 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h3><p>数值<code>number</code>、字符串<code>string</code>、布尔值<code>Boolean</code>、<code>symbol</code>、<code>undefined</code>、<code>null</code></p><h3 id="复杂类型"><a href="#复杂类型" class="headerlink" title="复杂类型"></a>复杂类型</h3><p>对象<code>object</code>— 狭义的对象<code>object</code>、数组<code>array</code>、函数<code>function</code></p><h2 id="null-和-undefined的区别"><a href="#null-和-undefined的区别" class="headerlink" title="null 和 undefined的区别"></a>null 和 undefined的区别</h2><ul><li>当变量没有赋值时— undefined</li><li>有对象<code>object</code>,但还没赋值 — null</li><li>有非对象<code>object</code>,不想赋值 — undefined</li></ul><h3 id="JavaScript三种方法确定数据类型"><a href="#JavaScript三种方法确定数据类型" class="headerlink" title="JavaScript三种方法确定数据类型"></a>JavaScript三种方法确定数据类型</h3><blockquote><p>typeof运算符<br>instanceof运算符<br>Object.prototype.toString方法</p></blockquote><h2 id="JavaScript内容详细内容"><a href="#JavaScript内容详细内容" class="headerlink" title="JavaScript内容详细内容"></a>JavaScript内容详细内容</h2><p>1、<a href="https://wangdoc.com/javascript/" target="_blank" rel="noopener">阮一峰JavaScript教程</a><br>2、<a href="http://javascript.ruanyifeng.com/" target="_blank" rel="noopener">阮一峰</a></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>CSS布局</title>
      <link href="/2018/12/11/CSS%E5%B8%83%E5%B1%80/"/>
      <url>/2018/12/11/CSS%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="本文主要包括以下内容："><a href="#本文主要包括以下内容：" class="headerlink" title="本文主要包括以下内容："></a>本文主要包括以下内容：</h2><ol><li>左右布局</li><li>左中右布局</li><li>水平居中</li><li>垂直居中</li><li>等其他小技巧</li></ol><h3 id="1、左右布局（两栏布局）"><a href="#1、左右布局（两栏布局）" class="headerlink" title="1、左右布局（两栏布局）"></a>1、左右布局（两栏布局）</h3><ul><li>两栏布局： <strong>一栏定宽，一栏自适应</strong>。</li><li>链接:<br><a href="http://js.jirengu.com/ruzogewubi/1/edit?html,css,output" target="_blank" rel="noopener">两栏布局</a></li></ul><h3 id="2、左中右布局-三栏布局"><a href="#2、左中右布局-三栏布局" class="headerlink" title="2、左中右布局(三栏布局)"></a>2、左中右布局(三栏布局)</h3><ul><li>三栏布局：<strong>两边定宽，然后中间的width是auto自适应内容</strong>。</li><li>链接:<br><a href="http://js.jirengu.com/dezilezuke/1/edit?html,css,output" target="_blank" rel="noopener">三栏布局</a></li></ul><h3 id="3、水平居中"><a href="#3、水平居中" class="headerlink" title="3、水平居中"></a>3、水平居中</h3><ul><li>flex实现水平居中: <strong>Flexbox布局自适应调整和分布一个容器里的项目布局，即使他们的大小是未知或者是动态的</strong>。</li><li>链接:<br><a href="http://js.jirengu.com/wisegaguco/1/edit?html,css,output" target="_blank" rel="noopener">flex水平居中</a></li></ul><h3 id="4、垂直居中"><a href="#4、垂直居中" class="headerlink" title="4、垂直居中"></a>4、垂直居中</h3><ul><li>绝对定位与负边距实现: <strong>利用绝对定位，将元素的top和left属性都设为50%，再利用margin边距，将元素回拉它本身高宽的一半，实现垂直居中。</strong></li><li>链接:<br><a href="http://js.jirengu.com/nolikenemi/1/edit?html,css,output" target="_blank" rel="noopener">绝对定位与负边距实现</a></li><li>绝对定位与margin: <strong>利用绝对定位与margin，但是无需知道被垂直居中元素的高和宽</strong>。</li><li>链接:<br><a href="http://js.jirengu.com/huzetituqu/1/edit" target="_blank" rel="noopener">绝对定位与margin</a></li></ul><h3 id="5、等其他小技巧"><a href="#5、等其他小技巧" class="headerlink" title="5、等其他小技巧"></a>5、等其他小技巧</h3><ul><li>水平垂直居中(flex布局)</li><li>链接<br><a href="http://js.jirengu.com/limoyefato/1/edit?html,css,output" target="_blank" rel="noopener">水平垂直居中flex布局</a></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>CSS</title>
      <link href="/2018/12/10/CSS/"/>
      <url>/2018/12/10/CSS/</url>
      
        <content type="html"><![CDATA[<h2 id="本文主要包括以下内容："><a href="#本文主要包括以下内容：" class="headerlink" title="本文主要包括以下内容："></a>本文主要包括以下内容：</h2><ol><li>高度是由什么决定的?</li><li>line-box 是啥?</li><li>box 是啥（盒模型）?</li><li>宽度是由什么决定的?</li><li>position 的 5 个取值</li><li>z-index</li></ol><h3 id="1、高度是由什么决定的"><a href="#1、高度是由什么决定的" class="headerlink" title="1、高度是由什么决定的?"></a>1、高度是由什么决定的?</h3><ul><li><strong>内联元素</strong> (自左往右,自动换行，但如果内联元素是一个很长的英文单词，则不会分开换行)<br><code>内联元素的高是由字体设计师决定</code> </li><li><strong>块级元素</strong> (从上往下，占据整行)<br><code>块级元素的高度由其内部文档流元素的高度总分决定的</code></li></ul><h3 id="2、line-box-是啥"><a href="#2、line-box-是啥" class="headerlink" title="2、line-box 是啥?"></a>2、line-box 是啥?</h3><ul><li>每一行称为一条Line Box，它又是由这一行的许多<strong>inline-box组成，它的高度可以直接由line-height决定</strong>，line boxes的高度垂直堆叠形成了containing box的高度，就是我们见到的div或是p标签之类的高度了。</li></ul><h3 id="3、box-是啥（盒模型）"><a href="#3、box-是啥（盒模型）" class="headerlink" title="3、box 是啥（盒模型）?"></a>3、box 是啥（盒模型）?</h3><ul><li>盒模型对比<br><img src="http://upload-images.jianshu.io/upload_images/6970717-2046f9172e7c0e58.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="盒模型对比.png"><br><code>W3C标准中padding、border所占的空间不在width、height范围内，大家俗称的IE的盒模型width包括content尺寸＋padding＋border</code></li></ul><h3 id="4、宽度是由什么决定的"><a href="#4、宽度是由什么决定的" class="headerlink" title="4、宽度是由什么决定的?"></a>4、宽度是由什么决定的?</h3><ul><li><strong>行内元素</strong>的宽度是由它的<strong>内容</strong>决定的，行内元素不能设置宽高</li><li><strong>块级元素</strong>当没有设置宽度是<strong>默认100%宽</strong>，当设置了宽度是就是固定的宽度 </li></ul><h3 id="5、position-的-5-个取值"><a href="#5、position-的-5-个取值" class="headerlink" title="5、position 的 5 个取值"></a>5、position 的 5 个取值</h3><ul><li>sticky</li><li>absolute</li><li>fixed</li><li>relative</li><li>static</li></ul><h3 id="6、z-index"><a href="#6、z-index" class="headerlink" title="6、z-index"></a>6、z-index</h3><ul><li><strong>z-index 属性指定了一个具有定位属性的元素及其子代元素的 z-order。 当元素之间重叠的时候，z-order 决定哪一个元素覆盖在其余元素的上方显示。 通常来说 z-index 较大的元素会覆盖较小的一个。</strong></li><li>链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index" target="_blank" rel="noopener">z-index标签</a></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>HTML_Common</title>
      <link href="/2018/12/09/HTML-Common/"/>
      <url>/2018/12/09/HTML-Common/</url>
      
        <content type="html"><![CDATA[<h2 id="本文主要包括以下内容："><a href="#本文主要包括以下内容：" class="headerlink" title="本文主要包括以下内容："></a>本文主要包括以下内容：</h2><ol><li>iframe 标签</li><li>a 标签</li><li>form 标签</li><li>input / button标签</li><li>table 标签</li></ol><h3 id="1、iframe-标签"><a href="#1、iframe-标签" class="headerlink" title="1、iframe 标签"></a>1、iframe 标签</h3><ul><li>嵌套页面<br><code>&lt;iframe src=&quot;https://www.baidu.com&quot; name=&quot;xxx&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;</code></li><li>常用和<code>&lt;a&gt;</code>使用<br><code>&lt;a href=&quot;https://qq.com&quot; target=xxx&gt;</code></li></ul><h3 id="2、a-标签"><a href="#2、a-标签" class="headerlink" title="2、a 标签"></a>2、a 标签</h3><ul><li>跳转页面（<strong>HTTP GET 请求</strong>）</li><li>属性：</li><li>链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a" target="_blank" rel="noopener">a标签</a></li></ul><h3 id="3、form-标签"><a href="#3、form-标签" class="headerlink" title="3、form 标签"></a>3、form 标签</h3><ul><li>跳转页面（<strong>HTTP POST 请求</strong>）</li><li>属性：</li><li>链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form" target="_blank" rel="noopener">form标签</a></li></ul><h3 id="4、input-button标签"><a href="#4、input-button标签" class="headerlink" title="4、input / button标签"></a>4、input / button标签</h3><ul><li><strong>区别</strong>：是否为「空标签」</li><li>input 的属性如：</li><li>链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input" target="_blank" rel="noopener">input标签</a></li></ul><blockquote><p><code>&lt;input type=&quot;text&quot;&gt;</code><br><code>&lt;input type=&quot;password&quot;&gt;</code><br><code>&lt;input type=&quot;submit&quot;&gt;</code><br><code>&lt;input type=&quot;checkbox&quot; value=&quot;xxx&quot;&gt;</code><br><code>&lt;input type=&quot;radio&quot; value=&quot;yyy&quot;&gt;</code></p></blockquote><ul><li>button 的属性如：</li><li>链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/button" target="_blank" rel="noopener">button</a></li></ul><blockquote><p><code>&lt;button name=&quot;button&quot;&gt;Click me&lt;/button&gt;</code><br><code>&lt;button&gt;Click me&lt;/button&gt;</code></p></blockquote><h3 id="5、table-标签"><a href="#5、table-标签" class="headerlink" title="5、table 标签"></a>5、table 标签</h3><ul><li><strong>用于展示数据</strong></li><li>table 的属性：</li><li>链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/table" target="_blank" rel="noopener">table标签</a></li><li>table 实现标签:<br><code>tr --- table row</code>, <code>th --- table header cell</code>, <code>td --- table data cell</code></li><li><strong>知识点</strong>：<ul><li>空标签</li><li>可替换标签</li><li>全局属性</li><li>display 不止 3 种</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>HTML</title>
      <link href="/2018/12/08/HTML/"/>
      <url>/2018/12/08/HTML/</url>
      
        <content type="html"><![CDATA[<h2 id="本文主要包括以下内容："><a href="#本文主要包括以下内容：" class="headerlink" title="本文主要包括以下内容："></a>本文主要包括以下内容：</h2><ol><li>HTML 的版本</li><li>怎样理解 HTML 语义化</li><li>怎样理解内容与样式分离的原则</li><li>有哪些常见的meta标签</li><li>文档声明的作用?严格模式和混杂模式指什么?&lt;!doctype html&gt; 的作用?</li><li>浏览器乱码的原因是什么？如何解决?</li><li>常见的浏览器有哪些？什么内核？</li><li>列出常见的标签，并简单介绍这些标签用在什么场景</li></ol><h3 id="1、HTML-的版本"><a href="#1、HTML-的版本" class="headerlink" title="1、HTML 的版本"></a>1、HTML 的版本</h3><ul><li>HTML <code>超文本标记语言</code>（HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。</li><li>XML <code>可扩展标识语言</code>(The Extensible Markup Language)的简写，主要用于存储数据和结构。</li><li>XHTML <code>可扩展标识语言</code> (The Extensible HyperText Markup Language)的缩写,基于XML，作用与HTML类似,目的就是实现HTML向XML的过渡。 </li></ul><h3 id="2、怎样理解-HTML-语义化"><a href="#2、怎样理解-HTML-语义化" class="headerlink" title="2、怎样理解 HTML 语义化"></a>2、怎样理解 HTML 语义化</h3><ul><li>语义化HTML是一种编写HTML的方式。</li><li>选择合适的标签、使用合理的代码结构，便于开发者阅读，同时让浏览器的爬虫和机器很好地解析。</li><li>语义化的好处:<ol><li>页面呈现出很好地<strong>内容结构、代码结构</strong>。</li><li><strong>用户体验好</strong>。</li><li>利于<strong>SEO优化</strong>。</li><li>方便其他设备<strong>解析</strong>来渲染网页。</li><li>便于<strong>团队开发和维护</strong>，语义化更具<strong>可读性</strong>。</li></ol></li></ul><h3 id="3、怎样理解内容与样式分离的原则"><a href="#3、怎样理解内容与样式分离的原则" class="headerlink" title="3、怎样理解内容与样式分离的原则"></a>3、怎样理解内容与样式分离的原则</h3><ul><li>在WEB开发中， 一个网页分为三部分：<code>Html——结构（内容）</code>，<code>css——表现（样式）</code>，<code>javascrip——行为</code>。内容与样式分离，就是让内容的归 HTML, 样式归 CSS。同时，HTML 内不允许出现属性样式，尽量不要出现行内样式。</li><li>编码正确做法是HTML和CSS要分开使用，不要混着用。重点放在HTML的结构和语义化上，让HTML能提现页面结构或者内容,，然后进行 css 样式设置（即内容与样式分离） ，写JS的时候，尽量不要用JS去直接操作样式，而是通过给元素添加删除class来控制样式变化（即行为分离）。</li><li>分离原则的优点:<ol><li><strong>浏览器加载网页页面速度变快</strong>。分离原则下，大部分页面代码写在了CSS当中，页面体积容量变得更小。</li><li><strong>网页修改设计时，效率、省时</strong>。根据html标签内ID或class的标记，到CSS里找到相应的ID或class，可以快速替换指定位置的样式，不会破坏页面架构和其他部分的样式。</li><li><strong>典型的应用就是网页换肤</strong>。使用相同的 html 结构，不同的 CSS 样式。</li><li><strong>更好地被搜索引擎收录</strong>。基于内容与样式分离的原则，html的语义化就是首要考虑的,网页中语义化的标签代码就会更加适合搜索引擎。</li><li><strong>CSS样式的分离，它可以根据不同的浏览器，达到显示效果的统一</strong>。保证网页架构不变形的前提下，放心在不同浏览器渲染显示样式。</li></ol></li></ul><h3 id="4、有哪些常见的meta标签"><a href="#4、有哪些常见的meta标签" class="headerlink" title="4、有哪些常见的meta标签"></a>4、有哪些常见的meta标签</h3><ul><li><p>语言采用<strong>中文</strong><br><code>&lt;meta http-equiv=&quot;Content-Language&quot; content=&quot;zh-CN&quot; /&gt;</code>       </p></li><li><p>编码格式：<strong>告诉给浏览器用什么方式来都这页代码</strong><br>  <code>&lt;meta charset=&quot;utf-8&quot;&gt;</code>       </p></li><li>如果支持Google Chrome Frame：GCF，则使用GCF渲染；如果系统安装ie8或以上版本，则使用最高版本ie渲染； 否则，这个设定可以忽略。 目的<strong>使内容在移动端上比较合理展示</strong>。<br>  <code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt;</code>    </li><li>控制网页为全屏幕大小<br>  <code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;&gt;</code></li><li>目的是方便<strong>SEO优化</strong>内容关键字搜索<br>  <code>&lt;meta name=&quot;keywords&quot; content=&quot;&quot;&gt;</code></li></ul><h3 id="5、文档声明的作用-严格模式和混杂模式指什么-lt-doctype-html-gt-的作用"><a href="#5、文档声明的作用-严格模式和混杂模式指什么-lt-doctype-html-gt-的作用" class="headerlink" title="5、文档声明的作用?严格模式和混杂模式指什么?&lt;!doctype html&gt; 的作用?"></a>5、文档声明的作用?严格模式和混杂模式指什么?&lt;!doctype html&gt; 的作用?</h3><ul><li>文档声明的作用  <p>文档声明目的是<strong>防止出现乱码</strong>情况。</p></li><li>严格模式和混杂模式指什么<br><strong>严格模式</strong>：又称标准模式，是指<strong>浏览器按照 W3C 标准解析代码</strong>。<br><strong>混杂模式</strong>：又称怪异模式或兼容模式，是指<strong>浏览器用自己的方式解析代码</strong>。<br>   <strong>区分</strong>    ：浏览器解析时到底使用严格模式还是混杂模式，与网页中的 <strong>DTD</strong> 直接相关。</li><li>关于&lt;!DOCTYPE html&gt;<ul><li>关于<doctype>声明叫做文件类型定义（DTD），声明的作用<strong>为了告诉浏览器该文件的类型。让浏览器解析器知道应该用哪个规范来解析文档</strong>。</doctype></li></ul></li></ul><h3 id="6、浏览器乱码的原因是什么？如何解决"><a href="#6、浏览器乱码的原因是什么？如何解决" class="headerlink" title="6、浏览器乱码的原因是什么？如何解决?"></a>6、浏览器乱码的原因是什么？如何解决?</h3><ul><li>html源代码内中文字内容与html编码不同造成。但无论是哪种情况造成乱码在网页开始时候都需要设置网页编码。</li><li>解决：<br>  <code>&lt;meta charset=&quot;utf-8&quot;&gt;</code></li></ul><h3 id="7、常见的浏览器有哪些？什么内核？"><a href="#7、常见的浏览器有哪些？什么内核？" class="headerlink" title="7、常见的浏览器有哪些？什么内核？"></a>7、常见的浏览器有哪些？什么内核？</h3><ul><li><p>浏览器</p><p>chrome浏览器、火狐浏览器（Mozilla Firefox）、IE浏览器、360极速浏览器、搜狗浏览器、猎豹极轻浏览器等。</p></li><li><p>内核<br>1、Trident(IE内核)；<br>2、Gecko(Firefox内核)；<br>3、Presto(Opera前内核) (已废弃)；<br>4、Webkit(Safari内核,Chrome内核原型,开源)。</p></li></ul><h3 id="8、列出常见的标签，并简单介绍这些标签用在什么场景"><a href="#8、列出常见的标签，并简单介绍这些标签用在什么场景" class="headerlink" title="8、列出常见的标签，并简单介绍这些标签用在什么场景"></a>8、列出常见的标签，并简单介绍这些标签用在什么场景</h3><ul><li><strong>注意点</strong><br>1、标签属性全小写;<br>2、标签要闭合、自闭合标签可以省略 /;<br>3、标题里不能有段落，段落里不能有标题;</li><li><code>h1~h6</code> 标题<blockquote><p></p><h1>代表页面最大的标题</h1><br><h2>二级标题</h2><br><h3>更弱的标题</h3><br><h4>…</h4><br><h5>…</h5><p></p><h6>最小标题</h6></blockquote></li><li><code>p</code>段落<blockquote><p>表示大段文字</p></blockquote></li><li><code>a</code>链接，链到一个地址<blockquote><p>&lt;a href=”<a href="http://www.google.com&quot;&quot;" target="_blank" rel="noopener">http://www.google.com&quot;&quot;</a> target=”_blank” title=”ABC”&gt;google.com<br><a href="#">空</a><br><a href="#about">定位ID标签about位置</a><br><a href="/getCourse">链接路径地址</a></p></blockquote></li><li><code>img</code>展示一张图片<blockquote><p><img src="a.png" alt=""></p></blockquote></li><li><code>div</code>语义为“一大块”，用于给页面划分区块，让结构更清晰<blockquote><div id="header">…</div><br><div id="content">…</div><br><div id="footer">…</div></blockquote></li><li><code>ul li</code></li><li>ul: unsort list 无序列表</li><li>用于表示并列的内容</li><li>ul的直接子元素是li</li><li>可以嵌套<blockquote><p><ul class="nav"><br>  <li><a href="#">首页</a></li><br>  <li><a href="#">关于</a></li></ul></p><pre><code>&lt;li&gt;      &lt;a href=&quot;#&quot;&gt;更多&lt;/a&gt;      &lt;ul&gt;            &lt;li&gt;联系&lt;/li&gt;            &lt;li&gt;地址&lt;/li&gt;      &lt;/ul&gt;&lt;/li&gt;</code></pre><p></p></blockquote></li></ul>·<p></p><li><code>ol li</code></li><li>ol: order list 有序序列表 </li><li>用于表示带步骤或者编号的并列内容 </li><li>ol的直接子元素只能是li 可以嵌套<blockquote><p></p><h2>把大象关到冰箱的步骤</h2><p></p><ol><br>  <li>把大象变小</li><br>  <li>打开冰箱</li><br>  <li>把大象塞进去</li><br></ol></blockquote></li><li>dl dt dd用于展示一系列 “标题:内容… ”的场景<blockquote><dl><br>  <dt>商品名称:</dt><br>  <dd>青花瓷</dd><br>  <dt>特征:</dt><br>  <dd>白色</dd><br>  <dd>圆口</dd><br>  <dt>商品介绍</dt><br>  <dd>这是一个年代久远的瓷器，很贵，易碎</dd><br></dl></blockquote></li><li><code>button</code>按钮<blockquote><button>点我</button></blockquote></li><li><code>strong em</code></li><li>em 需要强调一下</li><li>strong 很重要、强调性更强<blockquote><p>优惠 <strong>100</strong> 元</p><br><p>小谷 <em>2</em> 岁了</p></blockquote></li><li><code>iframe</code>用于嵌入一个页面 注意跨域操作问题<blockquote><p><iframe src="http://www.google.com" name="myPage"></iframe></p><p>&lt;a href=”<a href="http://www.baidu.com&quot;&quot;" target="_blank" rel="noopener">http://www.baidu.com&quot;&quot;</a> target=”myPage”&gt;baidu.com</p></blockquote></li><li><code>table</code>用于展示表格，不要用来做布局 thead tbody tfoot可省略，浏览器会自动添加 border-collapse: collapse;用于合并边框<blockquote><table><br><tr><br>  <th>姓名</th><br>  <th>年纪</th><br></tr><br><tr><br>  <td>小明</td><br>  <td>18</td><br></tr><br><tr><br>  <td>小花</td><br>  <td>20</td><br></tr><br></table></blockquote></li>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>HTTP</title>
      <link href="/2018/12/07/HTTP/"/>
      <url>/2018/12/07/HTTP/</url>
      
        <content type="html"><![CDATA[<h2 id="本文主要包括以下内容："><a href="#本文主要包括以下内容：" class="headerlink" title="本文主要包括以下内容："></a>本文主要包括以下内容：</h2><ol><li><p>HTTP是什么？</p></li><li><p>HTTP 请求包括哪些部分？</p></li><li><p>HTTP 响应包括哪些部分？</p></li><li><p>如何用Chrome开发者工具查看 HTTP 请求及请求的内容？</p></li><li><p>如何使用 curl 命令？</p></li></ol><h3 id="1、HTTP是什么"><a href="#1、HTTP是什么" class="headerlink" title="1、HTTP是什么?"></a>1、HTTP是什么?</h3><ul><li><p><code>HTTP</code> 全称：HyperText Transfer Protocol，即超文本传输协议<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE" target="_blank" rel="noopener">HTTP</a>的作用。</p></li><li><p><code>HTTP作用</code> : 指导浏览器和服务器之间进行沟通。</p></li></ul><h3 id="2、HTTP-请求包括哪些部分？"><a href="#2、HTTP-请求包括哪些部分？" class="headerlink" title="2、HTTP 请求包括哪些部分？"></a>2、HTTP 请求包括哪些部分？</h3><ul><li>HTTP请求主要包括四部分（第四部分可以为空），主要格式如下：<blockquote><p>1 动词 路径 协议/版本<br>2 Key1: value1<br>2 Key2: value2<br>2 Key3: value3<br>2 Content-Type: application/x-www-form-urlencoded<br>2 Host: <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a><br>2 User-Agent: curl/7.54.0<br>3<br>4 要上传的数据 </p></blockquote></li></ul><h3 id="3、HTTP-响应包括哪些部分？"><a href="#3、HTTP-响应包括哪些部分？" class="headerlink" title="3、HTTP 响应包括哪些部分？"></a>3、HTTP 响应包括哪些部分？</h3><ul><li>HTTP响应主要包括四部分（第四部分可以为空），主要格式如下：<blockquote><p>1 协议/版本号 状态码 状态解释<br>2 Key1: value1<br>2 Key2: value2<br>2 Content-Length: 17931<br>2 Content-Type: text/html<br>3<br>4 要下载的内容</p></blockquote></li></ul><h3 id="4、如何用Chrome开发者工具查看-HTTP-请求及响应的内容？"><a href="#4、如何用Chrome开发者工具查看-HTTP-请求及响应的内容？" class="headerlink" title="4、如何用Chrome开发者工具查看 HTTP 请求及响应的内容？"></a>4、如何用Chrome开发者工具查看 HTTP 请求及响应的内容？</h3><ul><li>eg：用<strong>Chrome</strong>发请求</li></ul><ol><li>打开 Network</li><li>地址栏输入网址</li><li>在 Network 点击，查看 request，点击「view source」</li><li>点击「view source」可查看请求的前三部分</li><li>如果有请求的第四部分，那么在 FormData 或 Payload 里面可以看到</li></ol><ul><li>用<strong>Chrome</strong>查看响应</li></ul><ol><li>打开 Network</li><li>输入网址</li><li>选中第一个响应</li><li>查看 Response Headers，点击「view source」</li><li>查看响应的前两部分</li><li>查看 Response 或者 Preview，你会看到响应的第 4 部分</li></ol><h3 id="5、如何使用-curl-命令？"><a href="#5、如何使用-curl-命令？" class="headerlink" title="5、如何使用 curl 命令？"></a>5、如何使用 curl 命令？</h3><ul><li><code>Curl</code>是Linux下一个很强大的http命令行工具。</li><li>curl的基本用途：创造一个请求，并得到响应，主要如下图：<blockquote><p>curl -s -v -H “Nola: xxx” – “<a href="https://www.baidu.com&quot;" target="_blank" rel="noopener">https://www.baidu.com&quot;</a><br>请求内容：<br>GET / HTTP/1.1<br>Host: <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a><br>User-Agent: curl/7.54.0<br>Accept: <em>/</em><br>Nola: xxx</p></blockquote></li></ul><blockquote><p>curl -X POST -s -v -H “Nola: xxx” – “<a href="https://www.baidu.com&quot;" target="_blank" rel="noopener">https://www.baidu.com&quot;</a><br>请求内容：<br>POST / HTTP/1.1<br>Host: <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a><br>User-Agent: curl/7.54.0<br>Accept: <em>/</em><br>Nola: xxx</p></blockquote><blockquote><p>curl -X POST -d “1234567890” -s -v -H “Nola: xxx” – “<a href="https://www.baidu.com&quot;" target="_blank" rel="noopener">https://www.baidu.com&quot;</a><br>请求内容：<br>POST / HTTP/1.1<br>Host: <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a><br>User-Agent: curl/7.54.0<br>Accept: <em>/</em><br>Nola: xxx<br>Content-Length: 10<br>Content-Type: application/x-www-form-urlencoded</p></blockquote>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>开博大吉</title>
      <link href="/2018/12/07/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/"/>
      <url>/2018/12/07/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</url>
      
        <content type="html"><![CDATA[<h3 id="学习记录前端小知识"><a href="#学习记录前端小知识" class="headerlink" title="学习记录前端小知识"></a>学习记录前端小知识</h3>]]></content>
      
      
      
    </entry>
    
  
  
</search>
